
 i3-Proxy README
=================


INSTALLATION of the i3-proxy:

To install the i3-proxy, you should perform the following steps.
It is very likely, that steps 1-3 are already done by your
Linux distribution (SuSE, RedHat, etc). But please double-check.


1. Configure the kernel

   * Make sure all options under "Networking Options -> IP: Netfilter
     Configuration" are set for packet filtering and mangling.
     Normally, ReHat, SuSE and other distributions have these options set,
     so mostly nothing has to be done here.

   * Make sure "Network device support -> Universal TUN/TAP device driver
     support" is also set. Also set in most distributions.
 

2. Install iptables 

    * Download and install iptables 1.2.5 or later from
      http://www.netfilter.org or use a rpm-package for your
      distribution.
      You can check if and where iptables is installed by typing
      'which iptables'. Please consider that use do this with root-rights,
      e.g. by 'sudo which iptables'.


3. TUN/TAP device driver configuration

    * Check if the device node for the tun device exists by 'ls /dev/net/tun'
      If it does not exist, make it by 'mknod /dev/net/tun c 10 201'

    * Please remember the minor number of the tun-device, which is the 201
      in the above case. Some distributions use sometimes 200.

      
4. Automatical loading of the tun-kernel-module

    * Add following line to /etc/modules.conf: 'alias char-major-10-201 tun'
      If your minor number was different than 201 you should mention this
      in the alias entry.
      
      This will enable that the tun-module will automatically loaded by
      the kernel, when the tun-device is needed. If you do not want this,
      you have to load in manually (with root-rights) by 'modprobe tun'
      or 'insmod $MOD_PATH/tun.o'

5. Linux Advanced Routing API

   Configuring the TUN/TAP-device and a routing-table 'tuntab'.
   Please remember, that the name of the routing-table (default: tuntab)
   can be configured in the proxy-config-file.

    * Add the tuntab routing table by adding the line '201 tuntab' to
      /etc/iproute2/rt_tables. This can easily be made by typing:
      'echo 201 tuntab >> /etc/iproute2/rt_tables'
      Please consider that you use the correct minor number of the tun-
      device.


6. You're done!

   Everything should now be ready to start the i3-proxy.    

   Please consider, that if some tools, e.g. iptables, ip, etc. that
   are used by the proxy, have different paths in different Linux
   distributions. The path and name of these tools can be configured
   in the i3-proxy.conf file.

   
Run i3-proxy:

 * Start i3_proxy as normal user (with sudo rights):
   sudo (PATH)/i3_proxy

   or as root-user: (PATH)/i3_proxy


'i3_proxy' offers the following command line options:

  # ./i3_proxy -h
  Usage: ./i3_proxy [-h] [-f CONFIG_FILE]
  '-h': Printd this help information
  '-a': Use specified ip-address as host-address, e.g. 141.3.70.138
  '-f': Use alternative proxy-config-file - default is 'i3-proxy.conf'
  '-s': Use alternative i3-server-list - default is '../i3_srv_list.txt'


Some important considerations:

 * Please remember: The proxy has to be started AFTER the specified
   i3-server is ready or it takes some time until trigger are reachable.
   The proxy currently does not check the availability of an i3-server.

 * Please check, if the dns-resolution of your hostname maps correctly
   on your current ip-address. If not, please specify your current ip-
   address with option '-a'.

 * You can select the amount and importance of debug messages printed
   by the i3-proxy on the standard output. The debug level is specified
   in i3/debug.h. Any change needs a recompiling of the i3_proxy-sources.

 * runtime-information about i3_proxy-data-structures can be found in the
   following files: /tmp/pub_dns, /tmp/id_list /tmp/fake_dns.
   You can change path and name of these files in the i3-proxy.conf-file.


   
 
Options in file i3-proxy.conf :

ALTERNATIVE_DNS_SERVER 141.3.70.12
Currently an additional DNS-server has to be specified for answering
the requests of the proxy. This is necessary because the proxy captures
all requests of the dns-servers specified in the host.


FAKE_ADDR_RANGE_START 10.0.0.2
Start address of the range from which the fake-ip-addresses are taken

I3_PROXY_PORT 20000
UDP port of the i3-proxy

TUN_DEV_PATH  /dev/net/tun
Path and filename of the tun-device

TUN_DEV_NAME tun0
Name of the tun-device to be used

TUN_RT_TABLE_NAME       tuntab
Name of the routing-table, that is used by the tun-device

TUN_DEV_ADDR  10.0.0.1
IP-address of the tun-device, e.g. '10.0.0.1'

IPTABLES  /sbin/iptables
Path and name of iptables-command-tool

IP_CMD  /usr/sbin/ip
Path and name of iptables-command-tool

I3_SERVER_LIST_FNAME   ../i3_srv_list.txt
Name and path of the file containing the list of i3-servers

TUN_MAX_TRANSFER_UNIT  1400
MTU of the tun-device, should be (1500 - i3_headers)

PUB_DNS_STATUS_FNAME    /tmp/pub_dns
Filename and path for the pub_dns-status-file, e.g. '/tmp/pub_dns'

FAKE_DNS_STATUS_FNAME   /tmp/fake_dns
Filename and path for the fake_dns-status-file, e.g. '/tmp/fake_dns'

ID_LIST_STATUS_FNAME    /tmp/id_list
Filename and path for the id_list-status-file, e.g. '/tmp/id_list'


The following entries are named as I3_DNS_FAKE_'xyz', where xyz
increases from 000 up to the supported amount of fake dns-names.
If the sequence is broken, the proxy stops looking for more entries.

I3_DNS_FAKE_001         www.icsi.i3
I3_DNS_FAKE_002         www.ucb.i3
I3_DNS_FAKE_003         www.cnn.com.i3
I3_DNS_FAKE_004         www.cs.berkeley.edu.i3


 
