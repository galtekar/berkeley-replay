Requirements:
   o Known to compile and work well enough on a Fedora Core 3 machine
   running Linux 2.6.13

To compile:
	./setup
	./configure
	make

To install:
	./make_dist.sh

	This will create two directories, remote_package and local_package.

To log:
	Copy the ``remote_package'' directory to the remote node(s) along with 
	your distributed application. Then start you app with the ``liblog''
	script, e.g., ``/home/ucb_i3/remote_package/liblog /bin/ls''. You may
	want to modify the default parameters in the ``remote_pacakage/run/liblog.cfg'' 
	config file before your copy the ``remote_package'' to the destination 
	nodes.
	
To replay:
	Go to the ``local_package'' directory and start the ``replay'
	script. It should tell you what to do.

Directory organization:

	libckpt: Victor Zandy's checkpointing library. I have simplified his
	implementation and adapted it to liblog's needs, so you must use this 
	version.

	libcommon: A statically linkable library with useful function. liblog
	requires several functions from here.

	liblog: The library containing wrappers that perform the logging.

	libreplay: The library containing wrappers that reads the log and 
	drives the replay.

	logger: Multi-threaded log server for use with the liblog library.

	plab: Scripts that are useful for running apps on PlanetLab.

	console: Scripts that provide the replay interface.

	tests: Homegrown test applications.

	apps: Real test applications.

	gdb: Our custom version of gdb - has several paches and few fixes here
	and there to permit logging/replay.

Useful environment variables:

	LOGGER_DIR

	LOGGER_TAG

	LOGGER_ROTATE_PERIOD_US

	LOGGER_PORT

	LIBLOG_DEBUG_LEVEL

	If you are using the ``liblog'' script to start your application,
	then you can influence these variables indirectly by modifying
	the ``liblog.cfg'' configuration file.
