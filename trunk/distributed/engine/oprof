#!/usr/bin/env python2.6

# vim:ts=4:sw=4:expandtab

import sys, os, misc, subprocess, getopt

my_name = os.path.basename(sys.argv[0])

class OprofileException(Exception):
    pass

def usage():
    print "Usage: %s [options] -- <prog-and-args> "%(my_name)

def opcontrol(cmd_list):
    p = subprocess.Popen(["sudo", "opcontrol"] + cmd_list)
    p.wait()
    if p.returncode != 0:
        raise OprofileException

try:
    opcontrol(["--stop"])
    opcontrol(["--reset"])
    opcontrol(["--start", "--separate=lib"])

    try:
        opts, args = getopt.getopt(sys.argv[1:], "s:d:p:qa", \
                ["save-dir=", "debug-level=", "prefix=", "quiet",\
                "pause"])
    except getopt.GetoptError, ge:
        misc.die( "Caught:" + str(ge) )

#    for opt, arg in opts:
#        #print opt, arg
#        if opt in ("-s", "--save-dir"):
#            save_dir = arg
#        elif opt in ("-d", "--debug-level"):
#            vkernel_opts["Base.Debug.Level"] = int(arg)
#        elif opt in ("-q", "--quiet"):
#            misc.QUIET = True
#        elif opt in ("-p", "--prefix"):
#            prefix = arg
#        elif opt in ("-a", "--pause"):
#            vkernel_opts["Base.Debug.PauseOnAbort"] = 1
#        else:
#            usage()
#            sys.exit(-1)

    if len(args) == 0:
        usage()
        sys.exit(-1)
    p = subprocess.Popen(args)
    p.wait()

    opcontrol(["--stop"])
except OprofileException:
    misc.die("problem running oprofile")
