ROOT_DIR = $(shell readlink -f ../)
include ../Rules.mk

OBJDIR = $(BUILD_DIR)/vkernel

INCLUDES += -I$(DIETLIBC_DIR)/include -I../ -I$(VEX_DIR)/pub -I$(VEX_DIR)/priv -I$(PERFCTR_DIR)/linux/include -I$(PERFCTR_DIR)/usr.lib
CFLAGS += -msoft-float -nostdinc $(INCLUDES) -Wno-attributes -DUSING_DIET_LIBC=1 -DCG_SLOW_WRITE=0

LIBS = $(LIBGCC) \
		$(BUILD_DIR)/libcommon/libcommon.a \
		$(DIETLIBC_DIR)//bin-i386/dietlibc.a \
		$(VEX_DIR)/libvex.a \
		$(PERFCTR_DIR)/usr.lib/libperfctr.a

VKERNEL_LDS = vkernel.lds

LDFLAGS += -static -nostdlib -L../dietlibc-0.30/bin-i386 -L../libckpt -L../vkernel -L../libcommon

VKERNEL_LDFLAGS = $(LDFLAGS) -Wl,--script=$(VKERNEL_LDS)

TARGETS = $(VKERNEL_BIN)

##################

IPC_SOURCES = \
			ipc/ipc.c \
			ipc/sem.c
			#ipc/shm.c \
			ipc/msg.c

DEV_SOURCES = \
			dev/device.c \
			dev/rd-os/fops.c \
			dev/rd-os/iops.c \
			dev/tty/tty.c \
			dev/tty/ops.c \
			dev/mem/mem.c \
			dev/mem/null_ops.c \
			dev/mem/random_ops.c \
			dev/mem/full_ops.c

FS_SOURCES = \
			fs/inode.c \
			fs/dentry.c \
			fs/path.c \
			fs/open.c \
			fs/dir.c \
			fs/read_write.c \
			fs/stat.c \
			fs/ioctl.c \
			fs/fcntl.c \
			fs/readdir.c \
			fs/files.c \
			fs/select.c \
			fs/buffer.c \
			fs/xattr.c \
			fs/super.c \
			fs/filesys.c \
			fs/pipefs/fifo.c \
			fs/pipefs/pipe.c \
			fs/pipefs/ops.c \
			fs/rootfs/ops.c \
			fs/epollfs/epoll.c \
			fs/epollfs/ops.c \
			fs/shmfs/shmem.c \
			fs/shmfs/ops.c \
			fs/sockfs/socket.c \
			fs/sockfs/ops.c \
			fs/eventfs/eventfd.c \
			fs/eventfs/ops.c

BT_SOURCES = \
			bt/bt.c \
			bt/transtab.c \
			bt/helpers.c \
			bt/module.c \
			bt/core/soft_brcnt.c \
			bt/core/soft_preempt.c \
			bt/core/brkpt.c \
			bt/core/entry.c \
			bt/core/cpuid.c \
			modules/base/main.c \
			modules/base/server.c \
			modules/help/main.c \
			modules/base/history.c \
			modules/base/record.c \
			modules/base/replay.c \
			modules/check/brchk.c \
			modules/check/main.c \
			modules/check/regchk.c \
			modules/check/sschk.c \
			modules/check/derefchk.c \
			modules/check/branch_trace.c \
			modules/formgen/main.c \
			modules/formgen/cgen_print.c \
			modules/formgen/cgen_flow.c \
			modules/formgen/cgen_exit.c \
			modules/formgen/cgen_unop.c \
			modules/formgen/cgen_binop.c \
			modules/formgen/cgen_triop.c \
			modules/formgen/cgen_mux.c \
			modules/formgen/cgen_ccall.c \
			modules/formgen/cgen_misc.c \
			modules/formgen/cgen_symmap.c \
			modules/formgen/cgen_rdwr_state.c \
			modules/formgen/cgen_ptr.c \
			modules/formgen/cgen_copy.c \
			modules/formgen/cgen_dirty.c \
			modules/formgen/cgen_extern.c \
			modules/formgen/cgen_pathsel.c \
			modules/formgen/cgen_join.c \
			modules/formgen/cgen_ckpt.c \
			modules/formgen/cgen_cfg.c \
			modules/formgen/cgen_profile.c \
			#bt/core/pin.c \
			#modules/flow/main.c \
			#modules/flow/oracle.c \
			#modules/flow/stats.c \
			#bt/race/memtrace.c \
			3bt/race/segment.c \
			3bt/race/segevent.c \
			3bt/race/main.c \

MM_SOURCES = \
			mem/user.c \
			mem/mem.c \
			mem/kmalloc.c \
			mem/vma.c \
			mem/gma.c

VCPU_SOURCES = \
			vcpu/vcpu.c \
			vcpu/sched.c \
			vcpu/seglock.c \
			vcpu/log.c

TASK_SOURCES = \
			task/debug.c \
			task/usercopy.c \
			task/binfmt_elf.c \
			task/binfmt_script.c \
			task/system.c \
			task/sys.c \
			task/fork.c \
			task/tls.c \
			task/pid.c \
			task/exit.c \
			task/process.c \
			task/time.c \
			task/exec.c \
			task/brcnt.c \
			task/cap.c \
         task/signal.c \
			task/gate_helper.c \
			task/exec_domain.c \
			task/futex.c \
			task/preempt.c \
			task/insnemu.c

CSOURCES = \
			$(TASK_SOURCES) \
			$(DEV_SOURCES) \
			$(FS_SOURCES) \
			$(LOG_SOURCES) \
			$(BT_SOURCES) \
			$(MM_SOURCES) \
			$(IPC_SOURCES) \
			$(VCPU_SOURCES)

ASM_OFFSETS = asm-offsets

ASMSOURCES = task/start_exit.S task/gate.S task/rsyscall.S task/i387.S task/syscall_table.S bt/dispatch.S

COBJECTS = $(CSOURCES:%.c=$(OBJDIR)/%.o)
ASMOBJECTS = $(ASMSOURCES:%.S=$(OBJDIR)/%.o)

##################


all: $(ASM_OFFSETS).h $(TARGETS)
#-include depend

$(ASM_OFFSETS).h:
	$(CC) $(CFLAGS) -S $(ASM_OFFSETS).c
	( set -e; \
	echo "#pragma once"; \
	echo "/*"; \
	echo " * DO NOT MODIFY."; \
	echo " *"; \
	echo " * This file was generated by Makefile"; \
	echo " *"; \
	echo " */"; \
	echo ""; \
	sed -ne "/#define/p" $(ASM_OFFSETS).s $<; \
	) > $@
	rm $(ASM_OFFSETS).s

$(VKERNEL_BIN): $(COBJECTS) $(ASMOBJECTS) $(LIBS)
	cpp -C -P $(VKERNEL_LDS).S > $(VKERNEL_LDS)
	$(CC) $(VKERNEL_LDFLAGS) $(ASMOBJECTS) $(COBJECTS) -Wl,--start-group $(LIBS) -Wl,--end-group -o $@
	objdump -p $(VKERNEL_BIN)

asm:
	objdump -S $(VKERNEL_BIN) > vkernel.s


#.c.o:
$(OBJDIR)/%.o : %.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o : %.S
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) -c $< -o $@


clean:
	rm -fr $(OBJDIR)
	rm -f $(ASM_OFFSETS).h $(VKERNEL_LDS) depend vkernel.s init.s tags

reallyclean: clean
	rm -f core.*

#gcc $(CFLAGS) -M -MG -MT $(CSOURCES) $(ASMSOURCES) > depend

depend:
	makedepend -- $(CFLAGS) -- $(CSOURCES) $(ASMSOURCES
