/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cornell_codons_Resolver */

#ifndef _Included_cornell_codons_Resolver
#define _Included_cornell_codons_Resolver
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: threadInitNumber */
#undef cornell_codons_Resolver_MIN_PRIORITY
#define cornell_codons_Resolver_MIN_PRIORITY 1L
#undef cornell_codons_Resolver_NORM_PRIORITY
#define cornell_codons_Resolver_NORM_PRIORITY 5L
#undef cornell_codons_Resolver_MAX_PRIORITY
#define cornell_codons_Resolver_MAX_PRIORITY 10L

/*
 * Class:     cornell_codons_Resolver
 * Method:    getStatsHeader
 * Signature: (Ljava/util/ArrayList;)V
 */
JNIEXPORT void JNICALL Java_cornell_codons_Resolver_getStatsHeader
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cornell_codons_Resolver
 * Method:    recordStatsHeader
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_cornell_codons_Resolver_recordStatsHeader
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     cornell_codons_Resolver
 * Method:    getStats
 * Signature: ([DIZ)I
 */
JNIEXPORT jint JNICALL Java_cornell_codons_Resolver_getStats
  (JNIEnv *, jobject, jdoubleArray, jint, jboolean);

/*
 * Class:     cornell_codons_Resolver
 * Method:    getStats
 * Signature: ([D)V
 */
JNIEXPORT void JNICALL Java_cornell_codons_Resolver_recordStats
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     cornell_codons_Resolver
 * Method:    init
 * Signature: ([B[BSIZ)V
 */
JNIEXPORT void JNICALL Java_cornell_codons_Resolver_init
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jshort, jint, jboolean);

/*
 * Class:     cornell_codons_Resolver
 * Method:    resolve
 * Signature: (Lrice/pastry/NodeId;Lcornell/codons/RequestMessage;[B[BZ)Z
 */
JNIEXPORT jboolean JNICALL Java_cornell_codons_Resolver_resolve
  (JNIEnv *, jobject, jobject, jobject, jbyteArray, jbyteArray, jboolean);

/*
 * Class:     cornell_codons_Resolver
 * Method:    handleResponse
 * Signature: ([B[BBBZZ)J
 */
JNIEXPORT jlong JNICALL Java_cornell_codons_Resolver_handleResponse
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyte, jbyte, jboolean, jboolean);

/*
 * Class:     cornell_codons_Resolver
 * Method:    run
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_cornell_codons_Resolver_run
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
