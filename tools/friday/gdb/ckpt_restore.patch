diff -ru gdb.orig/solib-svr4.c gdb/solib-svr4.c
--- gdb.orig/solib-svr4.c	2005-09-11 15:15:46.000000000 -0700
+++ gdb/solib-svr4.c	2005-09-11 15:11:59.000000000 -0700
@@ -629,6 +629,49 @@
 
 /*
 
+   LOCAL FUNCTION
+
+   find_r_brk
+
+   SYNOPSIS
+
+   static CORE_ADDR find_r_brk (void)
+
+   DESCRIPTION
+
+   Finds the address of a dynamic linker function (_r_debug_state).
+   See enable_break().  */
+
+static CORE_ADDR
+find_r_brk (void)
+{
+  /* This code copied (obviously) from first_link_map_member above. */
+  
+  /* FIXME: add these variables to link_map_offsets */
+#define R_BRK_SIZE	4
+#define R_BRK_OFFSET	8
+  
+  CORE_ADDR lm = 0;
+  struct link_map_offsets *lmo = SVR4_FETCH_LINK_MAP_OFFSETS ();
+  char *r_brk_buf = xmalloc (R_BRK_SIZE);
+  struct cleanup *cleanups = make_cleanup (xfree, r_brk_buf);
+
+  read_memory (debug_base + R_BRK_OFFSET, r_brk_buf, R_BRK_SIZE);
+
+  /* Assume that the address is unsigned.  */
+  lm = extract_unsigned_integer (r_brk_buf, R_BRK_SIZE);
+
+  /* FIXME:  Perhaps we should validate the info somehow, perhaps by
+     checking r_version for a known version number, or r_state for
+     RT_CONSISTENT. */
+
+  do_cleanups (cleanups);
+
+  return (lm);
+}
+
+/*
+
   LOCAL FUNCTION
 
   open_symbol_file_object
@@ -729,6 +772,7 @@
 
   /* Make sure we've looked up the inferior's dynamic linker's base
      structure.  */
+  debug_base = 0;	/* geels: Force reload  */
   if (! debug_base)
     {
       debug_base = locate_base ();
@@ -1109,6 +1153,16 @@
          closing the target closes the underlying bfd.  */
       target_close (tmp_bfd_target, 0);
 
+      if( debug_base ) {
+	/* geels: Try just reading struct r_debug.
+	   This approach is normally avoided because the field holds
+	   a relative address during startup.  However, once
+	   debug_base is valid, the linker should have updated r_brk
+	   with the correct absolute address. */
+	sym_addr = find_r_brk();
+	load_addr=0;
+      }
+      
       if (sym_addr != 0)
 	{
 	  create_solib_event_breakpoint (load_addr + sym_addr);
diff -ru gdb.orig/dummy-frame.c gdb/dummy-frame.c
--- gdb.orig/dummy-frame.c      2004-05-08 13:16:33.000000000 -0700
+++ gdb/dummy-frame.c   2006-08-16 11:45:00.000000000 -0700
@@ -214,7 +214,7 @@
 
   dummy_frame = dummy_frame_stack;
   while (dummy_frame)
-    if (INNER_THAN (dummy_frame->fp, fp))      /* stale -- destroy! */
+    if (TRUE)  /* geels 8/2006: earlier test insufficient.  Is TRUE ok? */
       {
        dummy_frame_stack = dummy_frame->next;
        regcache_xfree (dummy_frame->regcache);

