These are the available CVS tags and a brief description of the code
state for each. Each snapshot captures the code in some working (though
not perfectly working) form.

snapshot_01_033105:
	* Just converted the log server from UDP to TCP. This fixed a bug where
	some entries didn't show in the logs at all, most likely due to the
	unreliable, unsequential nature of UDP.

	* Turned on file support. I still have to implement wrappers for several
	more filesystem calls, but none of those seem to have been called yet.

	* Tested 6 i3_servers. All replayed without a hitch. It even worked
	after I moved the checkpoints and logs to a different directory.

	* This code uses PLT redirection. It'll warn you about unwrapped
	libc functions that are called during execution to tip you off about
	potential problems you might encounter during replay due to a libc
	function not being wrapped.

snapshot_071720052235:
	* Thread logging and replay works on a the ``threads'' test app.

snapshot_071820050900:
	* Cleaned up thread logging support a bit more.

snapshot_072020052154:
	* Process and thread cooperative scheduling implemented. All test
	applications appear to log and replay just fine.

snapshot_072820051650:
	* i3server and generic proxy should replay, once we finish implementing
	read/write() system calls and make it so that libc pointers are
	initialized before being called from some other library's constructor.

snapshot_082120052312:
	* Log-mode intermediate checkpointing works. About to implement
	recovery.

snapshot_091620050035:
	* This contains a mostly-working implementation. Intermediate replay
	with multiple processes each with multiple threads doesn't work.
	This version also uses a socket-based version of liblog. At this point,
	I'm going to implement a SysV shared memory version. I will still
	use sockets for control messages, but shared memory will be used
	for data.

snapshot_100320050156:
	* A somewhat optimized version of the liblog. Some bugs related to
	multipled process and with multiple threads have been fixed. Others
	remain.

snapshot_100620051615:
	* Moved from the original 2 level scheduling scheme to a 1 level
	scheme where the scheduler is only concerned with multiplexing
	threads. This also improves performance and got rid of some bugs
	since there are now less locks to acquire and because it is easier
	to reason about.

snapshot_102120050402:
	* Regression test tool ``run_tests'' works on all current test apps.

snapshot_110220050800:
	* The logger now preallocates SysV shared memory segments to be
	efficient with voracious apps.

snapshot_012320061710:
	* After USENIX '06 submission deadline. Logger now dumps binary file.
	Use log2xml to get it into human-readable format (XML). Replay is
	probably broken. Logging is somewhat optimized, although the msg_coding
	hasn't been optimized. The goal now is to get everything working again,
	which shouldn't take too much work. Then get more apps working.

snapshot_020820061926:
	* Recovery from intermediate checkpoints works on both i3server and OCALA.
	There are a few bugs: checkpoint interval can't be too small, and
	replay hangs at the very end of the procthreads test app.

snapshot_042420061611
	* Sriram's app replays (mostly) on Cebidae (FC3), but not on mine (FC4).
	We're rushing to meet the OSDI 9:00 pm deadline. This version includes
	some initial support code for stack watchpoints. Dennis and I tried
	integrating it into rdb, but failed. We're giving up for the moment.

snapshot_042920062343:
	* Verified that intermediate checkpoints still work on i3serverd.
	Moved to a better debug-output system based on macros and debug levels.
	Now going to add ``checkpoint and recovering during replay'' feature.
