
This directory contains the simulator distribution software which
consists of two programs: (1) traffic_gen and (2) sim. The simulator
software is completely independent from the rest of the code
distribution. To compile traffic_gen and sim do:

>make depend
>make

For a quick start check the examples in the "examples/" directory.

traffic_gen
===========

traffic_gen is used to generate a detailed simulation description that
is then interpreted by sim. traffic_gen takes two arguments:

>traffic_gen input.sc seed 

a) input.sc contains a brief description of the experiment
   scenario. input.sc contains three types of commands:

  * events num avg wjoin wfail wroute 

  - this command generates "num" events with a Poisson distribution
  and an arrival rate of 1/avg. avg is expressed in ms. wjoin, wleave,
  wfail, winsert, and wfind represents integer weights associated to
  the basic five types of event: (1) node joining the system (wjoin),
  (2) node failing (wfail), (4) route packets. These weights determine
  the probability that an event is of certain type. Let wtotal =
  wjoin+wfail+wroute. Then, a new event is a join with a probability
  of wjoin/wtotal, a fail event with probability wfail/wtotal, and so
  on.

  * wait time 

  - this command introduces a pause between the previous
  and the next event

  * exit 

  - this command signals the termination of the simulation

b) "seed" represents the seed of the random number generator used to
   run the simulation. 

sim
===

sim implements the Chord protocol according to the pseudocode in the
"pseudocode.txt" file. For the parameters used by the simulator and
their settings see the "def.h" file.  sim executes the list of events
generated by traffic_gen. sim takes two parameters as inputs

> ./sim input.ev seed

a) input.ev - is generated by traffic_gen, and contains the list of
events to be executed by the simulator. There are size types of
events:

  * join n t - node n joins the system at time t. The node contacted
    by n is chosen randomly.

  * fail n t - node n fails at time t

  * route n id t - route document id at time t; the operation is
    initiated by node n

  * exit t - terminate simulation at time t 

